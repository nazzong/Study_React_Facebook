{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\"; //Acion Area\n\nfunction signUpAPI(data) {\n  return {\n    data: {\n      id: 1,\n      email: \"aaa@abc.com\",\n      nickname: \"TEST\"\n    }\n  }; // return axios.post(\"http://localhost:4000/api/signup\", data);\n}\n\nfunction signUp(action) {\n  var _result;\n\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: _result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            data: result.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n} // Watch Area\n\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // Include Area\n\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/sagas/user.js"],"names":["signUp","watchSignUp","userSaga","call","delay","all","fork","put","takeLatest","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","signUpAPI","data","id","email","nickname","action","result","type","console","error"],"mappings":";;oDAeUA,M;qDAoBAC,W;qDAOeC,Q;;AA1CzB,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,kBAAlE,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO;AACHA,IAAAA,IAAI,EAAG;AACPC,MAAAA,EAAE,EAAG,CADE;AAEPC,MAAAA,KAAK,EAAG,aAFD;AAGPC,MAAAA,QAAQ,EAAG;AAHJ;AADJ,GAAP,CADqB,CAQrB;AACH;;AAED,SAAUhB,MAAV,CAAiBiB,MAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMd,IAAI,CAACS,SAAD,EAAYK,MAAM,CAACJ,IAAnB,CAAV;;AAFvB;AAEcK,UAAAA,OAFd;AAAA;AAIQ,iBAAMX,GAAG,CAAC;AACNY,YAAAA,IAAI,EAAGR,eADD;AAENE,YAAAA,IAAI,EAAGK,OAAM,CAACL;AAFR,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQO,UAAAA,OAAO,CAACC,KAAR;AATR;AAUQ,iBAAMd,GAAG,CAAC;AACNY,YAAAA,IAAI,EAAGV,eADD;AAENI,YAAAA,IAAI,EAAGK,MAAM,CAACL;AAFR,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAmBA;;;AACA,SAAUZ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACE,eAAD,EAAkBV,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAMA;;;AACA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMG,GAAG,CAAC,CAACC,IAAI,CAACL,WAAD,CAAL,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\n\n//Acion Area\nfunction signUpAPI(data) {\n    return {\n        data : {\n        id : 1,\n        email : \"aaa@abc.com\",\n        nickname : \"TEST\",\n        },\n    };\n    // return axios.post(\"http://localhost:4000/api/signup\", data);\n}\n\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n\n        yield put({\n            type : SIGN_UP_SUCCESS,\n            data : result.data,\n        });\n    } catch(error) {\n        console.error(error);\n        yield put({\n            type : SIGN_UP_FAILURE,\n            data : result.data,\n        });\n    }\n}\n\n\n\n// Watch Area\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n\n\n// Include Area\nexport default function* userSaga() {\n    yield all([fork(watchSignUp), ]);\n}"]},"metadata":{},"sourceType":"module"}