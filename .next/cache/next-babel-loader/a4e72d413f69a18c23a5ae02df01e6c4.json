{"ast":null,"code":"import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { IMAGE_UPLOAD_FAILURE, IMAGE_UPLOAD_REQUEST, IMAGE_UPLOAD_SUCCESS } from \"../reducers/feed\";\nimport { Result } from \"antd\"; // action area\n\nfunction imageUploadAPI(data) {\n  return axios.post(\"/api/feed/image\", data);\n}\n\nfunction* imageUpload(action) {\n  try {\n    const result = yield call(imageUploadAPI, action.data);\n    yield put({\n      type: IMAGE_UPLOAD_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: IMAGE_UPLOAD_FAILURE,\n      data: Result.data\n    });\n  }\n} // watch area\n\n\nfunction* watchImageUpload() {\n  yield takeLatest(IMAGE_UPLOAD_REQUEST, imageUpload);\n}\n\nexport default function* feedSaga() {\n  yield all([//\n  ]);\n}","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/sagas/feed.js"],"names":["call","delay","all","fork","put","takeLatest","axios","IMAGE_UPLOAD_FAILURE","IMAGE_UPLOAD_REQUEST","IMAGE_UPLOAD_SUCCESS","Result","imageUploadAPI","data","post","imageUpload","action","result","type","error","console","watchImageUpload","feedSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,oBAHF,QAIO,kBAJP;AAKA,SAASC,MAAT,QAAuB,MAAvB,C,CAEA;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAON,KAAK,CAACO,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,CAAP;AACD;;AAED,UAAUE,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACW,cAAD,EAAiBI,MAAM,CAACH,IAAxB,CAAzB;AAEA,UAAMR,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAER,oBADE;AAERG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEV,oBADE;AAERK,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID;AACF,C,CAED;;;AACA,UAAUQ,gBAAV,GAA6B;AAC3B,QAAMf,UAAU,CAACG,oBAAD,EAAuBM,WAAvB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACR;AADQ,GAAD,CAAT;AAGD","sourcesContent":["import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  IMAGE_UPLOAD_FAILURE,\n  IMAGE_UPLOAD_REQUEST,\n  IMAGE_UPLOAD_SUCCESS,\n} from \"../reducers/feed\";\nimport { Result } from \"antd\";\n\n// action area\nfunction imageUploadAPI(data) {\n  return axios.post(\"/api/feed/image\", data);\n}\n\nfunction* imageUpload(action) {\n  try {\n    const result = yield call(imageUploadAPI, action.data);\n\n    yield put({\n      type: IMAGE_UPLOAD_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: IMAGE_UPLOAD_FAILURE,\n      data: Result.data,\n    });\n  }\n}\n\n// watch area\nfunction* watchImageUpload() {\n  yield takeLatest(IMAGE_UPLOAD_REQUEST, imageUpload);\n}\n\nexport default function* feedSaga() {\n  yield all([\n    //\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}