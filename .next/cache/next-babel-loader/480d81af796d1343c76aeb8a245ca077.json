{"ast":null,"code":"import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { IMAGE_UPLOAD_REQUEST, IMAGE_UPLOAD_SUCCESS, IMAGE_UPLOAD_FAILURE, //\nFEED_CREATE_REQUEST, FEED_CREATE_SUCCESS, FEED_CREATE_FAILURE, //\nFEED_LIST_REQUEST, FEED_LIST_SUCCESS, FEED_LIST_FAILURE } from \"../reducers/feed\"; // ACTION AREA ///////////////////////////////////////////////////////////////\n\nfunction imageUploadAPI(data) {\n  return axios.post(\"/api/feed/image\", data);\n}\n\nfunction* imageUpload(action) {\n  try {\n    const result = yield call(imageUploadAPI, action.data);\n    yield put({\n      type: IMAGE_UPLOAD_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: IMAGE_UPLOAD_FAILURE,\n      data: result.data\n    });\n  }\n} /////////////////////////////////////////////////////////////////////////////\n// ACTION AREA ///////////////////////////////////////////////////////////////\n\n\nfunction feedCreateAPI(data) {\n  return axios.post(\"/api/feed/create\", data);\n}\n\nfunction* feedCreate(action) {\n  try {\n    const result = yield call(feedCreateAPI, action.data);\n    yield put({\n      type: FEED_CREATE_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: FEED_CREATE_FAILURE,\n      data: result.data\n    });\n  }\n} // ACTION AREA ///////////////////////////////////////////////////////////////\n\n\nfunction feedListAPI(data) {\n  return axios.post(\"/api/feed/list\", data);\n}\n\nfunction* feedList(action) {\n  try {\n    const result = yield call(feedListAPI, action.data);\n    yield put({\n      type: FEED_LIST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: FEED_LIST_FAILURE,\n      data: result.data\n    });\n  }\n} /////////////////////////////////////////////////////////////////////////////\n// WATCH AREA\n\n\nfunction* watchImageUpload() {\n  yield takeLatest(IMAGE_UPLOAD_REQUEST, imageUpload);\n}\n\nfunction* watchFeedCreate() {\n  yield takeLatest(FEED_CREATE_REQUEST, feedCreate);\n}\n\nfunction* watchFeedList() {\n  yield takeLatest(FEED_LIST_REQUEST, feedList);\n}\n\nexport default function* feedSaga() {\n  yield all([fork(watchImageUpload), fork(watchFeedCreate), fork(watchFeedList) // ,\n  // ,\n  ]);\n}","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/sagas/feed.js"],"names":["call","delay","all","fork","put","takeLatest","axios","IMAGE_UPLOAD_REQUEST","IMAGE_UPLOAD_SUCCESS","IMAGE_UPLOAD_FAILURE","FEED_CREATE_REQUEST","FEED_CREATE_SUCCESS","FEED_CREATE_FAILURE","FEED_LIST_REQUEST","FEED_LIST_SUCCESS","FEED_LIST_FAILURE","imageUploadAPI","data","post","imageUpload","action","result","type","error","console","feedCreateAPI","feedCreate","feedListAPI","feedList","watchImageUpload","watchFeedCreate","watchFeedList","feedSaga"],"mappings":"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","sourcesContent":["import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  IMAGE_UPLOAD_REQUEST,\n  IMAGE_UPLOAD_SUCCESS,\n  IMAGE_UPLOAD_FAILURE,\n  //\n  FEED_CREATE_REQUEST,\n  FEED_CREATE_SUCCESS,\n  FEED_CREATE_FAILURE,\n  //\n  FEED_LIST_REQUEST,\n  FEED_LIST_SUCCESS,\n  FEED_LIST_FAILURE,\n} from \"../reducers/feed\";\n\n// ACTION AREA ///////////////////////////////////////////////////////////////\nfunction imageUploadAPI(data) {\n  return axios.post(\"/api/feed/image\", data);\n}\n\nfunction* imageUpload(action) {\n  try {\n    const result = yield call(imageUploadAPI, action.data);\n\n    yield put({\n      type: IMAGE_UPLOAD_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: IMAGE_UPLOAD_FAILURE,\n      data: result.data,\n    });\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////\n\n// ACTION AREA ///////////////////////////////////////////////////////////////\nfunction feedCreateAPI(data) {\n  return axios.post(\"/api/feed/create\", data);\n}\n\nfunction* feedCreate(action) {\n  try {\n    const result = yield call(feedCreateAPI, action.data);\n\n    yield put({\n      type: FEED_CREATE_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: FEED_CREATE_FAILURE,\n      data: result.data,\n    });\n  }\n}\n\n// ACTION AREA ///////////////////////////////////////////////////////////////\nfunction feedListAPI(data) {\n  return axios.post(\"/api/feed/list\", data);\n}\n\nfunction* feedList(action) {\n  try {\n    const result = yield call(feedListAPI, action.data);\n\n    yield put({\n      type: FEED_LIST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: FEED_LIST_FAILURE,\n      data: result.data,\n    });\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////\n\n// WATCH AREA\nfunction* watchImageUpload() {\n  yield takeLatest(IMAGE_UPLOAD_REQUEST, imageUpload);\n}\n\nfunction* watchFeedCreate() {\n  yield takeLatest(FEED_CREATE_REQUEST, feedCreate);\n}\n\nfunction* watchFeedList() {\n  yield takeLatest(FEED_LIST_REQUEST, feedList);\n}\n\nexport default function* feedSaga() {\n  yield all([\n    fork(watchImageUpload),\n    fork(watchFeedCreate),\n    fork(watchFeedList),\n    // ,\n    // ,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}