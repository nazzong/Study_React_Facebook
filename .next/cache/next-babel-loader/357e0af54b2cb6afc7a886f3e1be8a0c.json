{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCEESS, SIGN_UP_FAILURE, //\nSIGN_IN_REQUEST, SIGN_IN_SUCEESS, SIGN_IN_FAILURE } from \"../reducers/user\"; // ACTION AREA ///////////////////////////////////////////////////////////////\n\nfunction signUpAPI(data) {\n  return {\n    data: {\n      id: 1,\n      email: \"aaa@abc.com\",\n      nickname: \"TEST\"\n    }\n  }; // return axios.post(\"http:localhost:4000/api/signup\", data);\n}\n\nfunction signUp(action) {\n  var _result;\n\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: SIGN_UP_SUCEESS,\n            data: _result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            data: result.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n} /////////////////////////////////////////////////////////////////////////////\n// ACTION AREA ///////////////////////////////////////////////////////////////\n\n\nfunction signInAPI(data) {\n  return axios.post(\"http://localhost:4000/api/user/signin\", data);\n}\n\nfunction signIn(action) {\n  var _result2;\n\n  return _regeneratorRuntime.wrap(function signIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(signInAPI, action.data);\n\n        case 3:\n          _result2 = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: SIGN_IN_SUCEESS,\n            data: _result2.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: SIGN_IN_FAILURE,\n            data: result.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n} /////////////////////////////////////////////////////////////////////////////\n// WATCH AREA\n\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchSignIn() {\n  return _regeneratorRuntime.wrap(function watchSignIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(SIGN_IN_REQUEST, signIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // INCLUDE AREA\n\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchSignUp), fork(watchSignIn) //\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/sagas/user.js"],"names":["signUp","signIn","watchSignUp","watchSignIn","userSaga","call","delay","all","fork","put","takeLatest","axios","SIGN_UP_REQUEST","SIGN_UP_SUCEESS","SIGN_UP_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCEESS","SIGN_IN_FAILURE","signUpAPI","data","id","email","nickname","action","result","type","console","error","signInAPI","post"],"mappings":";;oDAwBUA,M;qDAuBAC,M;qDAmBAC,W;qDAIAC,W;qDAKeC,Q;;AA3EzB,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,eAHF,EAIE;AACAC,eALF,EAMEC,eANF,EAOEC,eAPF,QAQO,kBARP,C,CAUA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAO;AACLA,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,KAAK,EAAE,aAFH;AAGJC,MAAAA,QAAQ,EAAE;AAHN;AADD,GAAP,CADuB,CAQvB;AACD;;AAED,SAAUtB,MAAV,CAAiBuB,MAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMlB,IAAI,CAACa,SAAD,EAAYK,MAAM,CAACJ,IAAnB,CAAV;;AAFnB;AAEUK,UAAAA,OAFV;AAAA;AAII,iBAAMf,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAEZ,eADE;AAERM,YAAAA,IAAI,EAAEK,OAAM,CAACL;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIO,UAAAA,OAAO,CAACC,KAAR;AATJ;AAUI,iBAAMlB,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAEX,eADE;AAERK,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;AAEA;;;AACA,SAASS,SAAT,CAAmBT,IAAnB,EAAyB;AACvB,SAAOR,KAAK,CAACkB,IAAN,CAAW,uCAAX,EAAoDV,IAApD,CAAP;AACD;;AAED,SAAUlB,MAAV,CAAiBsB,MAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMlB,IAAI,CAACuB,SAAD,EAAYL,MAAM,CAACJ,IAAnB,CAAV;;AAFnB;AAEUK,UAAAA,QAFV;AAAA;AAII,iBAAMf,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAET,eADE;AAERG,YAAAA,IAAI,EAAEK,QAAM,CAACL;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIO,UAAAA,OAAO,CAACC,KAAR;AATJ;AAUI,iBAAMlB,GAAG,CAAC;AACRgB,YAAAA,IAAI,EAAER,eADE;AAERE,YAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;AAEA;;;AACA,SAAUjB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAACE,eAAD,EAAkBZ,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACK,eAAD,EAAkBd,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAIA;;;AACA,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRC,IAAI,CAACN,WAAD,CADI,EAERM,IAAI,CAACL,WAAD,CAFI,CAGR;AAHQ,WAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCEESS,\n  SIGN_UP_FAILURE,\n  //\n  SIGN_IN_REQUEST,\n  SIGN_IN_SUCEESS,\n  SIGN_IN_FAILURE,\n} from \"../reducers/user\";\n\n// ACTION AREA ///////////////////////////////////////////////////////////////\nfunction signUpAPI(data) {\n  return {\n    data: {\n      id: 1,\n      email: \"aaa@abc.com\",\n      nickname: \"TEST\",\n    },\n  };\n  // return axios.post(\"http:localhost:4000/api/signup\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n\n    yield put({\n      type: SIGN_UP_SUCEESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: result.data,\n    });\n  }\n}\n/////////////////////////////////////////////////////////////////////////////\n\n// ACTION AREA ///////////////////////////////////////////////////////////////\nfunction signInAPI(data) {\n  return axios.post(\"http://localhost:4000/api/user/signin\", data);\n}\n\nfunction* signIn(action) {\n  try {\n    const result = yield call(signInAPI, action.data);\n\n    yield put({\n      type: SIGN_IN_SUCEESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_IN_FAILURE,\n      data: result.data,\n    });\n  }\n}\n/////////////////////////////////////////////////////////////////////////////\n\n// WATCH AREA\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchSignIn() {\n  yield takeLatest(SIGN_IN_REQUEST, signIn);\n}\n\n// INCLUDE AREA\nexport default function* userSaga() {\n  yield all([\n    fork(watchSignUp),\n    fork(watchSignIn),\n    //\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}