{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/njs/Documents/4leaf-education/next_app/components/FeedCreateForm.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Input, Button, message } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CLEAR_PREVIEW_IMAGE, FEED_CREATE_REQUEST, IMAGE_UPLOAD_REQUEST } from \"../reducers/feed\";\nvar FeedCreateBox = styled.div.withConfig({\n  displayName: \"FeedCreateForm__FeedCreateBox\",\n  componentId: \"sc-boh3ew-0\"\n})([\"width:550px;padding:20px 0px;margin-bottom:10px;\"]);\n_c = FeedCreateBox;\nvar FeedContent = styled(Input.TextArea).withConfig({\n  displayName: \"FeedCreateForm__FeedContent\",\n  componentId: \"sc-boh3ew-1\"\n})([\"resize:none;width:100%;height:60px;\"]);\n_c2 = FeedContent;\nvar PreivewImg = styled.img.withConfig({\n  displayName: \"FeedCreateForm__PreivewImg\",\n  componentId: \"sc-boh3ew-2\"\n})([\"width:550px;height:auto;margin:10px 0px;\"]);\n_c3 = PreivewImg;\n\nvar FeedCreateForm = function FeedCreateForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var contentOnChange = function contentOnChange(e) {\n    setContent(e.target.value);\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.feed;\n  }),\n      previewImage = _useSelector.previewImage,\n      st_feedCreateDone = _useSelector.st_feedCreateDone;\n\n  useEffect(function () {\n    if (st_feedCreateDone) {\n      message.success(\"새로운 피드가 등록되었습니다.\");\n      setContent(\"\");\n      dispatch({\n        type: CLEAR_PREVIEW_IMAGE\n      });\n    }\n  }, [st_feedCreateDone]);\n  var imageFile = useRef();\n  var dispatch = useDispatch();\n  var fileButtonclick = useCallback(function () {\n    imageFile.current.click();\n  });\n  var fileChange = useCallback(function (e) {\n    var sendFile = e.target.files[0];\n    var formData = new FormData();\n    formData.append(\"image\", sendFile);\n    dispatch({\n      type: IMAGE_UPLOAD_REQUEST,\n      data: formData\n    });\n  }, [imageFile.current]);\n  var feedWriteHandler = useCallback(function () {\n    if (content === \"\") {\n      return message.error(\"피드내용을 입력해주세요.\");\n    }\n\n    if (previewImage === null) {\n      return message.error(\"이미지를 선택해주세요.\");\n    }\n\n    dispatch({\n      type: FEED_CREATE_REQUEST,\n      data: {\n        content: content,\n        imagePath: previewImage\n      }\n    });\n  }, [previewImage, content]);\n  return __jsx(FeedCreateBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(FeedContent, {\n    value: content,\n    onChange: contentOnChange,\n    allowClear: true,\n    placeholder: \"New Content...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    hidden: true,\n    ref: imageFile,\n    accept: \".png,.jpg\",\n    onChange: fileChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"dashed\",\n    onClick: fileButtonclick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Upload\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: feedWriteHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"), previewImage && __jsx(PreivewImg, {\n    src: \"https://api.schoolhealing4.co.kr/\".concat(previewImage),\n    alt: \"PREVIEW\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(FeedCreateForm, \"yGm3CpBJoOXhDkGpggeBCaRkj5Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c4 = FeedCreateForm;\nexport default FeedCreateForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FeedCreateBox\");\n$RefreshReg$(_c2, \"FeedContent\");\n$RefreshReg$(_c3, \"PreivewImg\");\n$RefreshReg$(_c4, \"FeedCreateForm\");","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/components/FeedCreateForm.jsx"],"names":["React","useCallback","useEffect","useRef","useState","Input","Button","message","styled","useDispatch","useSelector","CLEAR_PREVIEW_IMAGE","FEED_CREATE_REQUEST","IMAGE_UPLOAD_REQUEST","FeedCreateBox","div","FeedContent","TextArea","PreivewImg","img","FeedCreateForm","content","setContent","contentOnChange","e","target","value","state","feed","previewImage","st_feedCreateDone","success","dispatch","type","imageFile","fileButtonclick","current","click","fileChange","sendFile","files","formData","FormData","append","data","feedWriteHandler","error","imagePath"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Input, Button, message } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  CLEAR_PREVIEW_IMAGE,\n  FEED_CREATE_REQUEST,\n  IMAGE_UPLOAD_REQUEST,\n} from \"../reducers/feed\";\n\nconst FeedCreateBox = styled.div`\n  width: 550px;\n  padding: 20px 0px;\n  margin-bottom: 10px;\n`;\n\nconst FeedContent = styled(Input.TextArea)`\n  resize: none;\n  width: 100%;\n  height: 60px;\n`;\n\nconst PreivewImg = styled.img`\n  width: 550px;\n  height: auto;\n  margin: 10px 0px;\n`;\n\nconst FeedCreateForm = () => {\n  const [content, setContent] = useState(``);\n  const contentOnChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const { previewImage, st_feedCreateDone } = useSelector(\n    (state) => state.feed\n  );\n\n  useEffect(() => {\n    if (st_feedCreateDone) {\n      message.success(\"새로운 피드가 등록되었습니다.\");\n      setContent(``);\n      dispatch({\n        type: CLEAR_PREVIEW_IMAGE,\n      });\n    }\n  }, [st_feedCreateDone]);\n\n  const imageFile = useRef();\n  const dispatch = useDispatch();\n\n  const fileButtonclick = useCallback(() => {\n    imageFile.current.click();\n  });\n\n  const fileChange = useCallback(\n    (e) => {\n      const sendFile = e.target.files[0];\n\n      const formData = new FormData();\n\n      formData.append(\"image\", sendFile);\n\n      dispatch({\n        type: IMAGE_UPLOAD_REQUEST,\n        data: formData,\n      });\n    },\n    [imageFile.current]\n  );\n\n  const feedWriteHandler = useCallback(() => {\n    if (content === ``) {\n      return message.error(\"피드내용을 입력해주세요.\");\n    }\n\n    if (previewImage === null) {\n      return message.error(\"이미지를 선택해주세요.\");\n    }\n\n    dispatch({\n      type: FEED_CREATE_REQUEST,\n      data: {\n        content,\n        imagePath: previewImage,\n      },\n    });\n  }, [previewImage, content]);\n\n  return (\n    <FeedCreateBox>\n      <FeedContent\n        value={content}\n        onChange={contentOnChange}\n        allowClear={true}\n        placeholder=\"New Content...\"\n      />\n      <input\n        type=\"file\"\n        hidden\n        ref={imageFile}\n        accept=\".png,.jpg\"\n        onChange={fileChange}\n      />\n      <Button type=\"dashed\" onClick={fileButtonclick}>\n        Upload\n      </Button>\n      <Button type=\"primary\" onClick={feedWriteHandler}>\n        게시글 작성\n      </Button>\n\n      {previewImage && (\n        <PreivewImg\n          src={`https://api.schoolhealing4.co.kr/${previewImage}`}\n          alt=\"PREVIEW\"\n        />\n      )}\n    </FeedCreateBox>\n  );\n};\n\nexport default FeedCreateForm;\n"]},"metadata":{},"sourceType":"module"}