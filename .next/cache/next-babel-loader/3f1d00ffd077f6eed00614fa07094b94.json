{"ast":null,"code":"import produce from \"immer\";\nvar initailState = {\n  previewImage: null,\n  //\n  st_imageUploadLoading: false,\n  st_imageUploadDone: false,\n  st_imageUploadError: null,\n  //\n  st_feedCreateLoading: false,\n  st_feedCreateDone: false,\n  st_feedCreateError: null\n};\nexport var IMAGE_UPLOAD_REQUEST = \"IMAGE_UPLOAD_REQUEST\";\nexport var IMAGE_UPLOAD_SUCCESS = \"IMAGE_UPLOAD_SUCCESS\";\nexport var IMAGE_UPLOAD_FAILURE = \"IMAGE_UPLOAD_FAILURE\"; //\n\nexport var FEED_CREATE_REQUEST = \"FEED_CREATE_REQUEST\";\nexport var FEED_CREATE_SUCCESS = \"FEED_CREATE_SUCCESS\";\nexport var FEED_CREATE_FAILURE = \"FEED_CREATE_FAILURE\";\nexport var CLEAR_PREVIEW_IMAGE = \"CLEAR_PREVIEW_IMAGE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initailState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case IMAGE_UPLOAD_REQUEST:\n        {\n          draft.st_imageUploadLoading = true;\n          draft.st_imageUploadDone = false;\n          draft.st_imageUploadError = null;\n          break;\n        }\n\n      case IMAGE_UPLOAD_SUCCESS:\n        {\n          // 서버에서 이미지 주소를 반환한다. => action.data   return res.status(200).json({ path : 진짜 이미지 주소 })\n          draft.st_imageUploadLoading = false;\n          draft.st_imageUploadDone = true;\n          draft.st_imageUploadError = null;\n          draft.previewImage = action.data.path;\n          break;\n        }\n\n      case IMAGE_UPLOAD_FAILURE:\n        {\n          draft.st_imageUploadLoading = false;\n          draft.st_imageUploadDone = false;\n          draft.st_imageUploadError = action.data;\n          break;\n        }\n      ///////////////////////////////////////////////\n\n      case FEED_CREATE_REQUEST:\n        {\n          draft.st_feedCreateLoading = true;\n          draft.st_feedCreateDone = false;\n          draft.st_feedCreateError = null;\n          break;\n        }\n\n      case FEED_CREATE_SUCCESS:\n        {\n          draft.st_feedCreateLoading = false;\n          draft.st_feedCreateDone = true;\n          draft.st_feedCreateError = null;\n          break;\n        }\n\n      case FEED_CREATE_FAILURE:\n        {\n          draft.st_feedCreateLoading = false;\n          draft.st_feedCreateDone = false;\n          draft.st_feedCreateError = action.data;\n          break;\n        }\n\n      case CLEAR_PREVIEW_IMAGE:\n        {\n          draft.previewImage = null;\n        }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/reducers/feed.js"],"names":["produce","initailState","previewImage","st_imageUploadLoading","st_imageUploadDone","st_imageUploadError","st_feedCreateLoading","st_feedCreateDone","st_feedCreateError","IMAGE_UPLOAD_REQUEST","IMAGE_UPLOAD_SUCCESS","IMAGE_UPLOAD_FAILURE","FEED_CREATE_REQUEST","FEED_CREATE_SUCCESS","FEED_CREATE_FAILURE","CLEAR_PREVIEW_IMAGE","reducer","state","action","draft","type","data","path"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,IADK;AAEnB;AACAC,EAAAA,qBAAqB,EAAE,KAHJ;AAInBC,EAAAA,kBAAkB,EAAE,KAJD;AAKnBC,EAAAA,mBAAmB,EAAE,IALF;AAMnB;AACAC,EAAAA,oBAAoB,EAAE,KAPH;AAQnBC,EAAAA,iBAAiB,EAAE,KARA;AASnBC,EAAAA,kBAAkB,EAAE;AATD,CAArB;AAYA,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B,C,CACP;;AACA,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAAShB,YAAT;AAAA,MAAuBiB,MAAvB;AAAA,SACdlB,OAAO,CAACiB,KAAD,EAAQ,UAACE,KAAD,EAAW;AACxB,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKX,oBAAL;AAA2B;AACzBU,UAAAA,KAAK,CAAChB,qBAAN,GAA8B,IAA9B;AACAgB,UAAAA,KAAK,CAACf,kBAAN,GAA2B,KAA3B;AACAe,UAAAA,KAAK,CAACd,mBAAN,GAA4B,IAA5B;AACA;AACD;;AACD,WAAKK,oBAAL;AAA2B;AACzB;AACAS,UAAAA,KAAK,CAAChB,qBAAN,GAA8B,KAA9B;AACAgB,UAAAA,KAAK,CAACf,kBAAN,GAA2B,IAA3B;AACAe,UAAAA,KAAK,CAACd,mBAAN,GAA4B,IAA5B;AACAc,UAAAA,KAAK,CAACjB,YAAN,GAAqBgB,MAAM,CAACG,IAAP,CAAYC,IAAjC;AACA;AACD;;AACD,WAAKX,oBAAL;AAA2B;AACzBQ,UAAAA,KAAK,CAAChB,qBAAN,GAA8B,KAA9B;AACAgB,UAAAA,KAAK,CAACf,kBAAN,GAA2B,KAA3B;AACAe,UAAAA,KAAK,CAACd,mBAAN,GAA4Ba,MAAM,CAACG,IAAnC;AACA;AACD;AAED;;AAEA,WAAKT,mBAAL;AAA0B;AACxBO,UAAAA,KAAK,CAACb,oBAAN,GAA6B,IAA7B;AACAa,UAAAA,KAAK,CAACZ,iBAAN,GAA0B,KAA1B;AACAY,UAAAA,KAAK,CAACX,kBAAN,GAA2B,IAA3B;AACA;AACD;;AACD,WAAKK,mBAAL;AAA0B;AACxBM,UAAAA,KAAK,CAACb,oBAAN,GAA6B,KAA7B;AACAa,UAAAA,KAAK,CAACZ,iBAAN,GAA0B,IAA1B;AACAY,UAAAA,KAAK,CAACX,kBAAN,GAA2B,IAA3B;AACA;AACD;;AACD,WAAKM,mBAAL;AAA0B;AACxBK,UAAAA,KAAK,CAACb,oBAAN,GAA6B,KAA7B;AACAa,UAAAA,KAAK,CAACZ,iBAAN,GAA0B,KAA1B;AACAY,UAAAA,KAAK,CAACX,kBAAN,GAA2BU,MAAM,CAACG,IAAlC;AACA;AACD;;AAED,WAAKN,mBAAL;AAA0B;AACxBI,UAAAA,KAAK,CAACjB,YAAN,GAAqB,IAArB;AACD;;AAED;AACE;AAhDJ;AAkDD,GAnDM,CADO;AAAA,CAAhB;;AAsDA,eAAec,OAAf","sourcesContent":["import produce from \"immer\";\n\nconst initailState = {\n  previewImage: null,\n  //\n  st_imageUploadLoading: false,\n  st_imageUploadDone: false,\n  st_imageUploadError: null,\n  //\n  st_feedCreateLoading: false,\n  st_feedCreateDone: false,\n  st_feedCreateError: null,\n};\n\nexport const IMAGE_UPLOAD_REQUEST = \"IMAGE_UPLOAD_REQUEST\";\nexport const IMAGE_UPLOAD_SUCCESS = \"IMAGE_UPLOAD_SUCCESS\";\nexport const IMAGE_UPLOAD_FAILURE = \"IMAGE_UPLOAD_FAILURE\";\n//\nexport const FEED_CREATE_REQUEST = \"FEED_CREATE_REQUEST\";\nexport const FEED_CREATE_SUCCESS = \"FEED_CREATE_SUCCESS\";\nexport const FEED_CREATE_FAILURE = \"FEED_CREATE_FAILURE\";\n\nexport const CLEAR_PREVIEW_IMAGE = \"CLEAR_PREVIEW_IMAGE\";\n\nconst reducer = (state = initailState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case IMAGE_UPLOAD_REQUEST: {\n        draft.st_imageUploadLoading = true;\n        draft.st_imageUploadDone = false;\n        draft.st_imageUploadError = null;\n        break;\n      }\n      case IMAGE_UPLOAD_SUCCESS: {\n        // 서버에서 이미지 주소를 반환한다. => action.data   return res.status(200).json({ path : 진짜 이미지 주소 })\n        draft.st_imageUploadLoading = false;\n        draft.st_imageUploadDone = true;\n        draft.st_imageUploadError = null;\n        draft.previewImage = action.data.path;\n        break;\n      }\n      case IMAGE_UPLOAD_FAILURE: {\n        draft.st_imageUploadLoading = false;\n        draft.st_imageUploadDone = false;\n        draft.st_imageUploadError = action.data;\n        break;\n      }\n\n      ///////////////////////////////////////////////\n\n      case FEED_CREATE_REQUEST: {\n        draft.st_feedCreateLoading = true;\n        draft.st_feedCreateDone = false;\n        draft.st_feedCreateError = null;\n        break;\n      }\n      case FEED_CREATE_SUCCESS: {\n        draft.st_feedCreateLoading = false;\n        draft.st_feedCreateDone = true;\n        draft.st_feedCreateError = null;\n        break;\n      }\n      case FEED_CREATE_FAILURE: {\n        draft.st_feedCreateLoading = false;\n        draft.st_feedCreateDone = false;\n        draft.st_feedCreateError = action.data;\n        break;\n      }\n\n      case CLEAR_PREVIEW_IMAGE: {\n        draft.previewImage = null;\n      }\n\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}