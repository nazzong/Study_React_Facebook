{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport createSagaMiddleware from \"redux-saga\";\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","rootReducer","rootSaga","createSagaMiddleware","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GACZ,QACIT,OAAO,CAACD,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CADX,GAEIN,mBAAmB,CAACH,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CAHzB;AAKA,MAAME,KAAK,GAAGT,WAAW,CAACE,WAAD,EAAcM,QAAd,CAAzB;AAEAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBR,QAAnB,CAAjB;AAEA,SAAOM,KAAP;AACD,CAdD;;AAgBA,IAAMG,OAAO,GAAGf,aAAa,CAACQ,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middlewares = [sagaMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n\n  const store = createStore(rootReducer, enhancer);\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}