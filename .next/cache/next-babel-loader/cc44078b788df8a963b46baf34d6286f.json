{"ast":null,"code":"import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\"; //Acion Area\n\nfunction signUpAPI(data) {\n  return {\n    id: 1,\n    email: \"aaa@abc.com\",\n    nickname: \"TEST\"\n  }; // return axios.post(\"http://localhost:4000/api/signup\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: result.data\n    });\n  }\n} // Watch Area\n\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} // Include Area\n\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/njs/Documents/4leaf-education/next_app/sagas/user.js"],"names":["call","delay","all","fork","put","takeLatest","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","signUpAPI","data","id","email","nickname","signUp","action","result","type","error","console","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,kBAAlE,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO;AACHC,IAAAA,EAAE,EAAG,CADF;AAEHC,IAAAA,KAAK,EAAG,aAFL;AAGHC,IAAAA,QAAQ,EAAG;AAHR,GAAP,CADqB,CAMrB;AACH;;AAED,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACS,SAAD,EAAYM,MAAM,CAACL,IAAnB,CAAzB;AAEA,UAAMN,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAGT,eADD;AAENE,MAAAA,IAAI,EAAGM,MAAM,CAACN;AAFR,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMQ,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAGX,eADD;AAENI,MAAAA,IAAI,EAAGM,MAAM,CAACN;AAFR,KAAD,CAAT;AAIH;AACJ,C,CAID;;;AACA,UAAUU,WAAV,GAAwB;AACpB,QAAMf,UAAU,CAACE,eAAD,EAAkBO,MAAlB,CAAhB;AACH,C,CAID;;;AACA,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACiB,WAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { call, delay, all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\n\n//Acion Area\nfunction signUpAPI(data) {\n    return {\n        id : 1,\n        email : \"aaa@abc.com\",\n        nickname : \"TEST\",\n    };\n    // return axios.post(\"http://localhost:4000/api/signup\", data);\n}\n\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n\n        yield put({\n            type : SIGN_UP_SUCCESS,\n            data : result.data,\n        });\n    } catch(error) {\n        console.error(error);\n        yield put({\n            type : SIGN_UP_FAILURE,\n            data : result.data,\n        });\n    }\n}\n\n\n\n// Watch Area\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n\n\n// Include Area\nexport default function* userSaga() {\n    yield all([fork(watchSignUp), ]);\n}"]},"metadata":{},"sourceType":"module"}